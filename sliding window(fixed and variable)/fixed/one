def max_sum_subarray(arr, k):
    n = len(arr)
    
    # Edge case: if the array is smaller than k
    if n < k:
        return "Array size is smaller than the subarray size."
    
    # Compute the sum of the first window of size k
    max_sum = sum(arr[:k])
    window_sum = max_sum
    
    # Slide the window over the array
    for i in range(k, n):
        window_sum += arr[i] - arr[i - k]
        max_sum = max(max_sum, window_sum)
    
    return max_sum

# Example usage
arr = [1, 2, 3, 4, 5, 6, 7, 8, 9]
k = 3
print("Maximum sum of subarray of size", k, "is", max_sum_subarray(arr, k))
